#!/bin/bash

# THIS IS FOR RUNNING USUAL CLI APP COMMANDS

# ./cli up - runs frontend and api server instances on localhost:8080 (8081, 8082)
# ./cli test {!app} {folder} {Test.php} {extra option for codecept (e.g. -vv or --debug} runs tests for app (api/frontend/backend - required)

COMMAND=$1;
PARAM1=$2;
PARAM2=$3;
PARAM3=$4;
PARAM4=$5
APP=$PARAM1;
PHP="/usr/bin/php";
DIR=$( cd "$( dirname $0 )" && pwd );

case "$COMMAND" in
    deploy)
        SERVER="prizma"
        PATH="/var/www/pragmi"
        /usr/bin/rsync --recursive --links --compress --compress-level=9 --delete-after -e '/usr/bin/ssh -o Compression=no -x' --exclude-from=$DIR/.gitignore $DIR/ $SERVER:$PATH/
        /usr/bin/ssh $SERVER "cd $PATH ; sh cli update" 2>&1
    ;;
    init)
        chmod 0777 runtime
        chmod 0777 web/assets
        chmod -R 0777 web/files
        cp -n config/example.local.php config/local.php
        chmod +x yii
        php composer.phar install --prefer-dist
        php yii migrate --interactive=0
    ;;
    up)
        fuser -k 8080/tcp
        php -S localhost:8080 -t web > /dev/null 2>&1 &
    ;;
    down)
        fuser -k 8080/tcp
    ;;
    update)
        php composer.phar install --prefer-dist
        php yii migrate --interactive=0
        #./yii asset $DIR/config/asset-config.php $DIR/config/assets-prod.php
    ;;
    dev)
        php composer.phar install
        npm install
        php yii migrate --interactive=0
        php yii message config/i18n.php
        rm -rf runtime/cache/*
    ;;
    db)
        php yii console/db
    ;;
    add)
        COMMIT=${*#$COMMAND}
        COMMIT=${COMMIT#\s}
        git add -A ; git commit -am "$COMMIT" ; git push
    ;;
    delete)
        git remote prune origin
        git branch -D $PARAM1
        git push --delete origin $PARAM1
    ;;
    dockerup)
         docker-compose build
         docker-compose up -d
         #docker-compose up -d --remove-orphans
    ;;
    docker)
        docker-compose exec php sh cli $PARAM1
        #sudo docker ps
    ;;
    dockerdeleteall)
        docker rm -vf $(docker ps -aq)
        docker rmi -f $(docker images -aq)
    ;;
    test)
        # Turn off debugger and set server config for index-test.php
        php composer.phar install --dev
        cp -n tests/config/config-local.example.php tests/config/config-local.php
        fuser -k 8081/tcp
        php -S localhost:8081 -t web $DIR/web/index-test.php &
        ./yii cache/flush-all
        ./tests/bin/yii migrate --interactive=0
    #        ./tests/codeception/bin/yii fixture/load "*" --interactive=0
        ./vendor/codeception/codeception/codecept run $PARAM1 $PARAM2 --config tests/codeception.yml
        RESULT=$?
        fuser -k 8081/tcp
    #        ./yii console/sniff
        ./yii cache/flush-all
        exit $RESULT
    ;;
    *)
        echo "Available commands: update, dev, test, clean, up"
    ;;
esac
